### Kubernetes Setup

Here's a simple **bash script** `k3s_create_cluster.sh` to install **k3s** without a custom `config.yaml`. This assumes you're installing on a **Linux** system (like Ubuntu or CentOS), and you have root/sudo privileges.

### üìÑ `k3s_create_cluster.sh`

```bash
#!/bin/bash

multipass exec k3s-master -- bash -c "curl -sfL https://get.k3s.io | INSTALL_K3S_VERSION='v1.33.1+k3s1' INSTALL_K3S_EXEC='--disable=traefik' sh -s - --node-taint CriticalAddonsOnly=true:NoExecute"

multipass exec k3s-worker1 -- sudo apt update
multipass exec k3s-worker1 -- sudo apt install -y curl wget

multipass exec k3s-worker2 -- sudo apt update
multipass exec k3s-worker2 -- sudo apt install -y curl wget

sleep 30

K3S_TOKEN=$(multipass exec k3s-master -- sudo cat /var/lib/rancher/k3s/server/node-token)
K3S_URL=$(multipass info k3s-master | grep IPv4 | awk '{print $2}')

multipass exec k3s-worker1 -- bash -c "curl -sfL https://get.k3s.io | INSTALL_K3S_VERSION='v1.33.1+k3s1' K3S_URL=https://$K3S_URL:6443 K3S_TOKEN=$K3S_TOKEN sh -"
multipass exec k3s-worker2 -- bash -c "curl -sfL https://get.k3s.io | INSTALL_K3S_VERSION='v1.33.1+k3s1' K3S_URL=https://$K3S_URL:6443 K3S_TOKEN=$K3S_TOKEN sh -"

mkdir -p ~/.kube
multipass exec k3s-master -- sudo cat /etc/rancher/k3s/k3s.yaml > ~/.kube/k3s-config
sed -i.bak "s/127.0.0.1/$K3S_URL/g" ~/.kube/k3s-config

export KUBECONFIG=~/.kube/k3s-config
#   kubectl taint nodes k3s-master node-role.kubernetes.io/control-plane:NoSchedule
kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/controller-v1.8.2/deploy/static/provider/cloud/deploy.yaml
kubectl wait --namespace ingress-nginx --for=condition=ready pod --selector=app.kubernetes.io/component=controller --timeout=300s

K3S_LB_IP=$(kubectl get svc ingress-nginx-controller -n ingress-nginx -o jsonpath='{.status.loadBalancer.ingress[0].ip}')

while [ -z "$K3S_LB_IP" ]; do
    echo "Waiting for LoadBalancer IP..."
    K3S_LB_IP=$(kubectl get svc ingress-nginx-controller -n ingress-nginx -o jsonpath='{.status.loadBalancer.ingress[0].ip}')
    sleep 5
done

echo "k3s Kubernetes cluster created successfully"
echo "k3s Master Node IP: $K3S_URL"
echo "k3s LoadBalancer IP: $K3S_LB_IP"
echo ""
echo "Add to /etc/hosts:"
echo "$K3S_LB_IP k3s.local"
echo ""
echo "command:"
echo "sudo sh -c 'echo \"$K3S_LB_IP k3s.local\" >> /etc/hosts && echo \"$K3S_LB_IP k3s.local\" >> /etc/hosts'"

---





Here's a simple **bash script** to install **k3s** with a custom `config.yaml`. This assumes you're installing on a **Linux** system (like Ubuntu or CentOS), and you have root/sudo privileges.

---

### üìÑ `install-k3s.sh`

```bash
#!/bin/bash

set -e

# Define path to config file
CONFIG_FILE="/etc/rancher/k3s/config.yaml"

# Ensure the config directory exists
sudo mkdir -p /etc/rancher/k3s

# Copy your config.yaml to the correct location
# Make sure your config.yaml is in the same directory as this script, or change the path
if [ -f "./config.yaml" ]; then
    sudo cp ./config.yaml "$CONFIG_FILE"
    echo "[+] Copied config.yaml to $CONFIG_FILE"
else
    echo "[!] config.yaml not found in current directory. Aborting."
    exit 1
fi

# Download and install k3s using the config
curl -sfL https://get.k3s.io | INSTALL_K3S_EXEC="server" sh -

# Confirm installation
if command -v k3s >/dev/null 2>&1; then
    echo "[+] k3s installed successfully."
    sudo k3s kubectl get nodes
else
    echo "[!] k3s installation failed."
    exit 1
fi
```

---

### üõ†Ô∏è Notes:

* **Custom `config.yaml`** should define your desired options, for example:

  ```yaml
  write-kubeconfig-mode: "644"
  disable:
    - traefik
  tls-san:
    - "my.domain.com"
  ```
* You can also pass options via `INSTALL_K3S_EXEC="server"` for additional CLI flags.
* Run the script with:

  ```bash
  chmod +x install-k3s.sh
  ./install-k3s.sh
  ```

For more configuration options for `config.yaml`, you can refer to the [k3s documentation](https://rancher.com/docs/k3s/latest/en/networking/#traefik-ingress-controller).
