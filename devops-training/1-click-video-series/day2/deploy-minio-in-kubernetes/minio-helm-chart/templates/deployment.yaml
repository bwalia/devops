apiVersion: apps/v1
kind: Deployment
metadata:
  name: test-minio-{{ .Values.namespaceRef }}
  namespace: {{ .Release.Namespace }}
  labels:
    app: minio
spec:
  replicas: 1
  selector:
    matchLabels:
      app: minio
  template:
    metadata:
      labels:
        app: minio
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: app
                operator: In
                values:
                - minio
      tolerations:
      - key: "workload"
        operator: "Equal"
        value: "production"
        effect: "NoSchedule"
      - key: "app"
        operator: "Equal"
        value: "s3"
        effect: "NoSchedule"
      containers:
      - name: minio
        image: docker.io/bitnami/minio:2024
        ports:
        - containerPort: 9000
        - containerPort: 9001
        imagePullPolicy: Always
        env:
        - name: MINIO_BROWSER_REDIRECT_URL
          valueFrom:
            secretKeyRef:
              name: {{ .Release.Name }}-secrets
              key: MINIO_BROWSER_REDIRECT_URL
        - name: MINIO_ROOT_USER
          valueFrom:
            secretKeyRef:
              name: {{ .Release.Name }}-secrets
              key: MINIO_ROOT_USER
        - name: MINIO_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Release.Name }}-secrets
              key: MINIO_ROOT_PASSWORD
        - name: MINIO_DEFAULT_BUCKETS
          valueFrom:
            secretKeyRef:
              name: {{ .Release.Name }}-secrets
              key: MINIO_DEFAULT_BUCKETS
        volumeMounts:
        - name: test-minio-storage
          mountPath: "/data"
      volumes:
      - name: test-minio-storage
        persistentVolumeClaim:
          claimName: test-minio-pvc-{{ .Release.Namespace }}